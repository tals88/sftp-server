AWSTemplateFormatVersion: '2010-09-09'
Description: 'Secure SFTP Server on AWS ECS with Fargate'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the SFTP server will be deployed
  
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnet IDs for the SFTP server (at least 2 for high availability)
  
  AdminPassword:
    Type: String
    NoEcho: true
    MinLength: 8
    Description: Admin password for SFTP server management
    Default: changeme123
  
  SftpPort:
    Type: Number
    Default: 2222
    Description: Port for SFTP server
  
  AllowedCidr:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR block allowed to access SFTP server
  
  InstanceType:
    Type: String
    Default: t3.small
    AllowedValues: [t3.micro, t3.small, t3.medium, t3.large]
    Description: EC2 instance type for SFTP server

Resources:
  # ECS Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub '${AWS::StackName}-sftp-cluster'
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1

  # Security Group
  SftpSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for SFTP server
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref SftpPort
          ToPort: !Ref SftpPort
          CidrIp: !Ref AllowedCidr
          Description: SFTP access
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: All outbound traffic
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-sftp-sg'

  # EFS File System for persistent storage
  EFSFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      CreationToken: !Sub '${AWS::StackName}-sftp-efs'
      PerformanceMode: generalPurpose
      ThroughputMode: provisioned
      ProvisionedThroughputInMibps: 10
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-sftp-storage'

  # EFS Mount Targets
  EFSMountTarget1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SubnetId: !Select [0, !Ref SubnetIds]
      SecurityGroups:
        - !Ref EFSSecurityGroup

  EFSMountTarget2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SubnetId: !Select [1, !Ref SubnetIds]
      SecurityGroups:
        - !Ref EFSSecurityGroup

  # EFS Security Group
  EFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EFS
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId: !Ref SftpSecurityGroup
          Description: NFS access from SFTP server
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-efs-sg'

  # ECR Repository
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub '${AWS::StackName}-sftp-server'
      ImageScanningConfiguration:
        ScanOnPush: true
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Keep last 10 images",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 10
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  # IAM Role for ECS Task
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: EFSAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - elasticfilesystem:ClientMount
                  - elasticfilesystem:ClientWrite
                  - elasticfilesystem:ClientRootAccess
                Resource: !Sub '${EFSFileSystem}/*'

  # ECS Task Definition
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${AWS::StackName}-sftp-task'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 512
      Memory: 1024
      ExecutionRoleArn: !Ref ECSTaskRole
      TaskRoleArn: !Ref ECSTaskRole
      ContainerDefinitions:
        - Name: sftp-server
          Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepository}:latest'
          Essential: true
          PortMappings:
            - ContainerPort: !Ref SftpPort
              Protocol: tcp
          Environment:
            - Name: NODE_ENV
              Value: production
            - Name: SFTP_PORT
              Value: !Ref SftpPort
            - Name: SFTP_HOST
              Value: '0.0.0.0'
            - Name: STORAGE_BASE_DIR
              Value: /app/storage
            - Name: USERS_DB_PATH
              Value: /app/data/users.json
            - Name: HOST_KEY_PATH
              Value: /app/keys/host.key
            - Name: MAX_FILE_SIZE
              Value: '104857600'
            - Name: MAX_LOGIN_ATTEMPTS
              Value: '5'
            - Name: LOCKOUT_DURATION
              Value: '900000'
            - Name: SESSION_TIMEOUT
              Value: '1800000'
            - Name: BCRYPT_SALT_ROUNDS
              Value: '12'
            - Name: LOG_LEVEL
              Value: info
            - Name: ADMIN_USERNAME
              Value: admin
            - Name: ADMIN_PASSWORD
              Value: !Ref AdminPassword
          MountPoints:
            - SourceVolume: efs-storage
              ContainerPath: /app/storage
            - SourceVolume: efs-data
              ContainerPath: /app/data
            - SourceVolume: efs-keys
              ContainerPath: /app/keys
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: sftp-server
          HealthCheck:
            Command:
              - CMD-SHELL
              - 'node -e "const net = require(\"net\"); const client = net.createConnection(2222, \"localhost\"); client.on(\"connect\", () => { client.end(); process.exit(0); }); client.on(\"error\", () => process.exit(1));"'
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 60
      Volumes:
        - Name: efs-storage
          EFSVolumeConfiguration:
            FileSystemId: !Ref EFSFileSystem
            RootDirectory: /storage
            TransitEncryption: ENABLED
        - Name: efs-data
          EFSVolumeConfiguration:
            FileSystemId: !Ref EFSFileSystem
            RootDirectory: /data
            TransitEncryption: ENABLED
        - Name: efs-keys
          EFSVolumeConfiguration:
            FileSystemId: !Ref EFSFileSystem
            RootDirectory: /keys
            TransitEncryption: ENABLED

  # CloudWatch Log Group
  CloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/ecs/${AWS::StackName}-sftp-server'
      RetentionInDays: 30

  # ECS Service
  ECSService:
    Type: AWS::ECS::Service
    DependsOn:
      - EFSMountTarget1
      - EFSMountTarget2
    Properties:
      ServiceName: !Sub '${AWS::StackName}-sftp-service'
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref ECSTaskDefinition
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref SftpSecurityGroup
          Subnets: !Ref SubnetIds
          AssignPublicIp: ENABLED
      HealthCheckGracePeriodSeconds: 120

  # Application Load Balancer (optional, for health checks)
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub '${AWS::StackName}-sftp-alb'
      Scheme: internet-facing
      Type: network
      Subnets: !Ref SubnetIds
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-sftp-alb'

  # Target Group
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${AWS::StackName}-sftp-tg'
      Port: !Ref SftpPort
      Protocol: TCP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckProtocol: TCP
      HealthCheckPort: !Ref SftpPort
      HealthCheckIntervalSeconds: 30
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2

  # Listener
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: !Ref SftpPort
      Protocol: TCP

Outputs:
  SftpServerEndpoint:
    Description: SFTP Server endpoint
    Value: !GetAtt ApplicationLoadBalancer.DNSName
    Export:
      Name: !Sub '${AWS::StackName}-SftpEndpoint'

  SftpPort:
    Description: SFTP Server port
    Value: !Ref SftpPort
    Export:
      Name: !Sub '${AWS::StackName}-SftpPort'

  ECRRepository:
    Description: ECR Repository URI
    Value: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepository}'
    Export:
      Name: !Sub '${AWS::StackName}-ECRRepository'

  EFSFileSystemId:
    Description: EFS File System ID
    Value: !Ref EFSFileSystem
    Export:
      Name: !Sub '${AWS::StackName}-EFSFileSystemId'
